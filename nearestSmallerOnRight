import java.util.Arrays;

public class NearestSmallerOnRight {
    public static void main(String[] args) {
        int[] arr = {4, 5, 2, 10, 8 , 6 , 6 , 7 , 8 , 9 , 10 , 0 , -1};
        int[] result = replaceWithNearestSmallerOnRight(arr);
        System.out.println("Original Array: " + Arrays.toString(arr));
        System.out.println("Array after replacement: " + Arrays.toString(result));
    }

    public static int[] replaceWithNearestSmallerOnRight(int[] arr) {
        if (arr == null || arr.length == 0) {
            return null;
        }

        int n = arr.length;
        int[] result = new int[n];

        // Initialize the last element of result array with -1
        result[n - 1] = -1;

        // Iterate from second last element to first element
        for (int i = n - 2; i >= 0; i--) {
            // Initialize the current nearest smaller as -1
            int nearestSmaller = -1;
            
            // Iterate from next element to end
            for (int j = i + 1; j < n; j++) {
                // If we found a smaller element on the right side
                if (arr[j] < arr[i]) {
                    nearestSmaller = arr[j];
                    break;
                }
            }
            // Set the current nearest smaller to the result array
            result[i] = nearestSmaller;
        }

        return result;
    }
}
